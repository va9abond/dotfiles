# ----------------------------------------------------------
                                                   # Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'aserowy/tmux.nvim'
# ----------------------------------------------------------
                                                   # General
set-option -ga terminal-overrides ',screen-256color:Ss=\E[%p1%d q:Se=\E[2 q'
set-option -sa terminal-features ",screen-256color:RGB"
set-option -g default-terminal "screen-256color"

set-option -g focus-events on
set-option -g status-position top
set-option -g status-right "#{?window_bigger,[#{window_offset_x}#,#{window_offset_y}] ,}\"#{=21:pane_title}\" %H:%M %d/%m/%y"
set-option -g status-left-length 42
set -g status-style 'bg=#222222 fg=#666666'
set -g window-style 'bg=#000000'
set-window-option -g window-status-current-style 'fg=#EAE0C8'

set -g history-limit 10000
set -s set-clipboard on
set -s escape-time 0
set -g repeat-time 300
set -g base-index 1
set -g automatic-rename off # to much CPU sometimes
set -g renumber-windows on
set -g set-titles on
set -g mouse on
# ----------------------------------------------------------
                                                   # Unbinds
                                        # I do need nothing!
unbind C-z # suspend-client
unbind Space # next-layout
unbind ! # break-pane
unbind '"' # split-window
unbind "#" # list-buffers
unbind % # split-window -h
unbind & # confirm-before -p "kill-window #W (y/n)" kill-window
unbind "'" # command-prompt -p index "select-window -t ':%%'"
unbind "(" # switch-client -p
unbind ")" # switch-client -n
unbind - # delete-buffer
unbind . # command-prompt "move-window -t '%%'"
unbind ";" # last-pane
# unbind ":" # last-pane
unbind = # choose-buffer
unbind DC
unbind C
unbind E
unbind M
unbind m
unbind D # choose-client
unbind L # switch-client -l
unbind [ # copy-mode
unbind ] # paste-buffer
unbind c # new-window
unbind d # detach-client
unbind f # command-prompt "find-window '%%'"
unbind i # display-message
unbind l # last-window
unbind n # next-window
unbind o # select-pane -t :.+
unbind p # previous-window
unbind q # display-panes
unbind s # choose-tree
unbind t # clock-mode
unbind w # choose-window
unbind x # confirm-before -p "kill-pane #P? (y/n)" kill-pane
unbind "{" # swap-pane -U
unbind "}" # swap-pane -D
unbind PPage # copy-mode -u
unbind Up # select-pane -U
unbind Down # select-pane -D
unbind Left # select-pane -L
unbind Right # select-pane -R
unbind M-1 # select-layout even-horizontal
unbind M-2 # select-layout even-vertical
unbind M-3 # select-layout main-horizontal
unbind M-4 # select-layout main-vertical
unbind M-5 # select-layout tiled
unbind M-n # next-window -a
unbind M-o # rotate-window -D
unbind M-p # previous-window -a
unbind C-Up # resize-pane -U
unbind C-Down # resize-pane -D
unbind C-Left # resize-pane -L
unbind C-Right # resize-pane -R
# ----------------------------------------------------------
                                                 # except...
# -T root (same as -n)
# -n without prefix
# -r repeatable
# ----------------------------------------------------------
                                                     # Binds
unbind C-b
set-option -g prefix C-f
bind C-f send-prefix

set-window-option -g mode-keys vi

bind v copy-mode
bind p paste-buffer

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel "xclip -selection" \; display-message "Copied"
# bind -T copy-mode-vi y send-keys -X copy-selection "xclip -selection" \; display-message "Copied"

bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xclip -selection clipboard" ';' display-message "Copied"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard" ';' display-message "Copied"

unbind C-t
bind C-t new-window

unbind C-s
bind C-s new-session
# :rename-session [-t now_name] [new_name]
unbind s
bind s choose-session

bind -r C-w kill-window
bind -r c kill-pane
# confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind C-q confirm-before -p "kill-session #S? (y/n)" kill-session
bind C-d confirm-before -p "detach-client #S? (y/n)" detach-client

bind C-v split-window -h -c "#{pane_current_path}"
bind C-x split-window -v -c "#{pane_current_path}"

bind > swap-pane -D
bind < swap-pane -U

bind -r ] next-window
bind -r [ previous-window

bind C-l send-keys 'C-l'

bind -r C-Up    resize-pane -U 5
bind -r C-Down  resize-pane -D 5
bind -r C-Left  resize-pane -L 5
bind -r C-Right resize-pane -R 5

# bind -r m neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/personal/todo.md"
bind -r C-p run-shell "tmux neww ~/bin/tmux-sessionizer"


# ----------------------------------------------------------
                                                 # tmux.nvim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n C-h if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R


# bind-key -T vi-select j select-pane -D
# bind-key -T vi-select k select-pane -U
# bind-key -T vi-select h select-pane -L
# bind-key -T vi-select l select-pane -R
#
# bind-key -n C-w if-shell "$is_vim" "send-keys C-w" "switch-client -T vi-select"

set -g @plugin 'aserowy/tmux.nvim'

# navigation
set -g @tmux-nvim-navigation true
set -g @tmux-nvim-navigation-cycle false
set -g @tmux-nvim-navigation-keybinding-left 'C-h'
set -g @tmux-nvim-navigation-keybinding-down 'C-j'
set -g @tmux-nvim-navigation-keybinding-up 'C-k'
set -g @tmux-nvim-navigation-keybinding-right 'C-l'

# resize
set -g @tmux-nvim-resize false
# ----------------------------------------------------------
                                                   # Run tpm
run '~/.tmux/plugins/tpm/tpm'
